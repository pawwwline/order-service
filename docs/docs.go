// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/orders/{uid}": {
            "get": {
                "description": "Get order by UID",
                "tags": [
                    "orders"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order UID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.OrderResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.DeliveryResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "Ploshad Mira 15"
                },
                "city": {
                    "type": "string",
                    "example": "Kiryat Mozkin"
                },
                "email": {
                    "type": "string",
                    "example": "test@gmail.com"
                },
                "name": {
                    "type": "string",
                    "example": "Test Testov"
                },
                "phone": {
                    "type": "string",
                    "example": "+9720000000"
                },
                "region": {
                    "type": "string",
                    "example": "Kraiot"
                },
                "zip": {
                    "type": "string",
                    "example": "2639809"
                }
            }
        },
        "dto.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 404
                },
                "message": {
                    "type": "string",
                    "example": "order not found"
                }
            }
        },
        "dto.ItemResponse": {
            "type": "object",
            "properties": {
                "brand": {
                    "type": "string",
                    "example": "Vivienne Sabo"
                },
                "chrt_id": {
                    "type": "integer",
                    "example": 9934930
                },
                "name": {
                    "type": "string",
                    "example": "Mascaras"
                },
                "price": {
                    "type": "integer",
                    "example": 453
                },
                "sale": {
                    "type": "integer",
                    "example": 30
                },
                "size": {
                    "type": "string",
                    "example": "0"
                },
                "status": {
                    "type": "integer",
                    "example": 202
                },
                "total_price": {
                    "type": "integer",
                    "example": 317
                },
                "track_number": {
                    "type": "string",
                    "example": "WBILMTESTTRACK"
                }
            }
        },
        "dto.OrderResponse": {
            "type": "object",
            "properties": {
                "customer_id": {
                    "type": "string",
                    "example": "test"
                },
                "date_created": {
                    "type": "string",
                    "example": "2021-11-26T06:22:19Z"
                },
                "delivery": {
                    "$ref": "#/definitions/dto.DeliveryResponse"
                },
                "delivery_service": {
                    "type": "string",
                    "example": "meest"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ItemResponse"
                    }
                },
                "order_uid": {
                    "type": "string",
                    "example": "b563feb7b2b84b6test"
                },
                "payment": {
                    "$ref": "#/definitions/dto.PaymentResponse"
                },
                "track_number": {
                    "type": "string",
                    "example": "WBILMTESTTRACK"
                }
            }
        },
        "dto.PaymentResponse": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer",
                    "example": 1817
                },
                "bank": {
                    "type": "string",
                    "example": "alpha"
                },
                "currency": {
                    "type": "string",
                    "example": "USD"
                },
                "custom_fee": {
                    "type": "integer",
                    "example": 0
                },
                "delivery_cost": {
                    "type": "integer",
                    "example": 1500
                },
                "goods_total": {
                    "type": "integer",
                    "example": 317
                },
                "provider": {
                    "type": "string",
                    "example": "wbpay"
                },
                "request_id": {
                    "type": "string",
                    "example": ""
                },
                "transaction": {
                    "type": "string",
                    "example": "b563feb7b2b84b6test"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
